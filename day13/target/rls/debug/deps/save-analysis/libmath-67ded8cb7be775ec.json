{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1","program":"/home/jason/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","math","/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=67ded8cb7be775ec","-C","extra-filename=-67ded8cb7be775ec","--out-dir","/home/jason/Projects/AdventOfCode2020/day13/target/rls/debug/deps","-L","dependency=/home/jason/Projects/AdventOfCode2020/day13/target/rls/debug/deps","--extern","rand=/home/jason/Projects/AdventOfCode2020/day13/target/rls/debug/deps/librand-618c82be6d94df18.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/jason/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jason/Projects/AdventOfCode2020/day13/target/rls/debug/deps/libmath-67ded8cb7be775ec.rmeta"},"prelude":{"crate_id":{"name":"math","disambiguator":[12324108817548085453,7032451010892805459]},"crate_root":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src","external_crates":[{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","num":15,"id":{"name":"rand","disambiguator":[14469789684283149175,4842268098974083036]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","num":16,"id":{"name":"rand","disambiguator":[12850296092085434509,1347060788681361364]}},{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","num":17,"id":{"name":"libc","disambiguator":[17051175131773306087,12648159184136301714]}}],"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":6,"column_start":1,"column_end":15}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":6,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11}],"decl_id":null,"docs":" Mathematical utilities\n","sig":null,"attributes":[{"value":"! Mathematical utilities","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"warn(missing_docs)","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":28,"byte_end":50,"line_start":3,"line_end":3,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mean","qualname":"::mean","value":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":9}],"decl_id":null,"docs":" Functions for calculating mean\n","sig":null,"attributes":[{"value":"! Functions for calculating mean","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":82,"byte_end":116,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":398,"byte_end":408,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"arithmetic","qualname":"::mean::arithmetic","value":"pub fn arithmetic(&[f64]) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates arithmetic mean (AM) of data set `slice`.","sig":null,"attributes":[{"value":"/ Calculates arithmetic mean (AM) of data set `slice`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":137,"byte_end":193,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":194,"byte_end":197,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":198,"byte_end":213,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":214,"byte_end":217,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ * `slice` - collection of values","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":218,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":259,"byte_end":272,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":273,"byte_end":276,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":277,"byte_end":284,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use math::mean;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":285,"byte_end":304,"line_start":13,"line_end":13,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":305,"byte_end":308,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let slice = [8., 16.];","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":309,"byte_end":335,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(mean::arithmetic(&slice), 12.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":336,"byte_end":382,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":383,"byte_end":390,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":818,"byte_end":827,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"geometric","qualname":"::mean::geometric","value":"pub fn geometric(&[f64]) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculate geometric mean (GM) of data set `slice`.","sig":null,"attributes":[{"value":"/ Calculate geometric mean (GM) of data set `slice`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":494,"byte_end":548,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":549,"byte_end":552,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If the result would be imaginary, function returns `NAN`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":553,"byte_end":614,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":615,"byte_end":618,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":619,"byte_end":634,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":635,"byte_end":638,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * `slice` - collection of values","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":639,"byte_end":675,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":676,"byte_end":679,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":680,"byte_end":693,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":694,"byte_end":697,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":698,"byte_end":705,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use math::mean;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":706,"byte_end":725,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":726,"byte_end":729,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let slice = [9., 16.];","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":730,"byte_end":756,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(mean::geometric(&slice), 12.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":757,"byte_end":802,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":803,"byte_end":810,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":9},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1253,"byte_end":1261,"line_start":60,"line_end":60,"column_start":8,"column_end":16},"name":"harmonic","qualname":"::mean::harmonic","value":"pub fn harmonic(&[f64]) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculate harmonic mean (HM) of data set `slice`.","sig":null,"attributes":[{"value":"/ Calculate harmonic mean (HM) of data set `slice`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":997,"byte_end":1050,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1051,"byte_end":1054,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1055,"byte_end":1070,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1071,"byte_end":1074,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `slice` - collection of values","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1075,"byte_end":1111,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1112,"byte_end":1115,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1116,"byte_end":1129,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1130,"byte_end":1133,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1134,"byte_end":1141,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use math::mean;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1142,"byte_end":1161,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1162,"byte_end":1165,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let slice = [1., 7.];","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1166,"byte_end":1191,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(mean::harmonic(&slice), 1.75);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1192,"byte_end":1237,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/mean.rs","byte_start":1238,"byte_end":1245,"line_start":59,"line_end":59,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"round","qualname":"::round","value":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Rounding functions\n","sig":null,"attributes":[{"value":"! Rounding functions","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3266,"byte_end":3288,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3917,"byte_end":3921,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"ceil","qualname":"::round::ceil","value":"pub fn ceil(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round up.","sig":null,"attributes":[{"value":"/ Round up.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3309,"byte_end":3322,"line_start":4,"line_end":4,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3323,"byte_end":3326,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Round `value` up to accuracy defined by `scale`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3327,"byte_end":3379,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3380,"byte_end":3451,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3452,"byte_end":3526,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3527,"byte_end":3564,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3565,"byte_end":3568,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3569,"byte_end":3584,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3585,"byte_end":3588,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3589,"byte_end":3619,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3620,"byte_end":3651,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3652,"byte_end":3655,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3656,"byte_end":3670,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3671,"byte_end":3674,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3675,"byte_end":3682,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3683,"byte_end":3703,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3704,"byte_end":3707,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::ceil(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3708,"byte_end":3750,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rounded, 3.142);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3751,"byte_end":3782,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3783,"byte_end":3790,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3791,"byte_end":3794,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3795,"byte_end":3802,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3803,"byte_end":3823,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3824,"byte_end":3827,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::ceil(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3828,"byte_end":3869,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(rounded, 3500.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3870,"byte_end":3901,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":3902,"byte_end":3909,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4664,"byte_end":4669,"line_start":63,"line_end":63,"column_start":8,"column_end":13},"name":"floor","qualname":"::round::floor","value":"pub fn floor(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round down.","sig":null,"attributes":[{"value":"/ Round down.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4050,"byte_end":4065,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4066,"byte_end":4069,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Round `value` down to accuracy defined by `scale`.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4070,"byte_end":4124,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4125,"byte_end":4196,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4197,"byte_end":4271,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4272,"byte_end":4309,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4310,"byte_end":4313,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4314,"byte_end":4329,"line_start":43,"line_end":43,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4330,"byte_end":4333,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4334,"byte_end":4364,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4365,"byte_end":4396,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4397,"byte_end":4400,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4401,"byte_end":4415,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4416,"byte_end":4419,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4420,"byte_end":4427,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4428,"byte_end":4448,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4449,"byte_end":4452,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::floor(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4453,"byte_end":4496,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(rounded, 3.141);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4497,"byte_end":4528,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4529,"byte_end":4536,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4537,"byte_end":4540,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4541,"byte_end":4548,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4549,"byte_end":4569,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4570,"byte_end":4573,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::floor(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4574,"byte_end":4616,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(rounded, 3400.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4617,"byte_end":4648,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4649,"byte_end":4656,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5484,"byte_end":5503,"line_start":96,"line_end":96,"column_start":8,"column_end":27},"name":"half_away_from_zero","qualname":"::round::half_away_from_zero","value":"pub fn half_away_from_zero(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half away from zero.","sig":null,"attributes":[{"value":"/ Round half away from zero.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4799,"byte_end":4829,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4830,"byte_end":4833,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4834,"byte_end":4882,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/ rounding half away from zero.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4883,"byte_end":4916,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4917,"byte_end":4988,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":4989,"byte_end":5063,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5064,"byte_end":5101,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5102,"byte_end":5105,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5106,"byte_end":5121,"line_start":76,"line_end":76,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5122,"byte_end":5125,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5126,"byte_end":5156,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5157,"byte_end":5188,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5189,"byte_end":5192,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5193,"byte_end":5207,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5208,"byte_end":5211,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5212,"byte_end":5219,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5220,"byte_end":5240,"line_start":84,"line_end":84,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5241,"byte_end":5244,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_away_from_zero(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5245,"byte_end":5302,"line_start":86,"line_end":86,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(rounded, 3.142);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5303,"byte_end":5334,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5335,"byte_end":5342,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5343,"byte_end":5346,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5347,"byte_end":5354,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5355,"byte_end":5375,"line_start":91,"line_end":91,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5376,"byte_end":5379,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_away_from_zero(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5380,"byte_end":5436,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(rounded, 3500.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5437,"byte_end":5468,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5469,"byte_end":5476,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6219,"byte_end":6228,"line_start":128,"line_end":128,"column_start":8,"column_end":17},"name":"half_down","qualname":"::round::half_down","value":"pub fn half_down(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half down.","sig":null,"attributes":[{"value":"/ Round half down.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5574,"byte_end":5594,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5595,"byte_end":5598,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5599,"byte_end":5647,"line_start":102,"line_end":102,"column_start":1,"column_end":49}},{"value":"/ rounding half down.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5648,"byte_end":5671,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5672,"byte_end":5743,"line_start":104,"line_end":104,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5744,"byte_end":5818,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5819,"byte_end":5856,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5857,"byte_end":5860,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5861,"byte_end":5876,"line_start":108,"line_end":108,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5877,"byte_end":5880,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5881,"byte_end":5911,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5912,"byte_end":5943,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5944,"byte_end":5947,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5948,"byte_end":5962,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5963,"byte_end":5966,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5967,"byte_end":5974,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5975,"byte_end":5995,"line_start":116,"line_end":116,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":5996,"byte_end":5999,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_down(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6000,"byte_end":6047,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(rounded, 3.141);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6048,"byte_end":6079,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6080,"byte_end":6087,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6088,"byte_end":6091,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6092,"byte_end":6099,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6100,"byte_end":6120,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6121,"byte_end":6124,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_down(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6125,"byte_end":6171,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(rounded, 3400.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6172,"byte_end":6203,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6204,"byte_end":6211,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6984,"byte_end":6996,"line_start":160,"line_end":160,"column_start":8,"column_end":20},"name":"half_to_even","qualname":"::round::half_to_even","value":"pub fn half_to_even(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half to nearest even number.","sig":null,"attributes":[{"value":"/ Round half to nearest even number.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6297,"byte_end":6335,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6336,"byte_end":6339,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6340,"byte_end":6388,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/ rounding half to nearest even number.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6389,"byte_end":6430,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6431,"byte_end":6502,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6503,"byte_end":6577,"line_start":137,"line_end":137,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6578,"byte_end":6615,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6616,"byte_end":6619,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6620,"byte_end":6635,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6636,"byte_end":6639,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6640,"byte_end":6670,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6671,"byte_end":6702,"line_start":143,"line_end":143,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6703,"byte_end":6706,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6707,"byte_end":6721,"line_start":145,"line_end":145,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6722,"byte_end":6725,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6726,"byte_end":6733,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6734,"byte_end":6754,"line_start":148,"line_end":148,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6755,"byte_end":6758,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_to_even(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6759,"byte_end":6809,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(rounded, 3.142);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6810,"byte_end":6841,"line_start":151,"line_end":151,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6842,"byte_end":6849,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6850,"byte_end":6853,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6854,"byte_end":6861,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6862,"byte_end":6882,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6883,"byte_end":6886,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_to_even(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6887,"byte_end":6936,"line_start":157,"line_end":157,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(rounded, 3400.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6937,"byte_end":6968,"line_start":158,"line_end":158,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":6969,"byte_end":6976,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7748,"byte_end":7759,"line_start":192,"line_end":192,"column_start":8,"column_end":19},"name":"half_to_odd","qualname":"::round::half_to_odd","value":"pub fn half_to_odd(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half to nearest odd number.","sig":null,"attributes":[{"value":"/ Round half to nearest odd number.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7065,"byte_end":7102,"line_start":164,"line_end":164,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7103,"byte_end":7106,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7107,"byte_end":7155,"line_start":166,"line_end":166,"column_start":1,"column_end":49}},{"value":"/ rounding half to nearest odd number.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7156,"byte_end":7196,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7197,"byte_end":7268,"line_start":168,"line_end":168,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7269,"byte_end":7343,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7344,"byte_end":7381,"line_start":170,"line_end":170,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7382,"byte_end":7385,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7386,"byte_end":7401,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7402,"byte_end":7405,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7406,"byte_end":7436,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7437,"byte_end":7468,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7469,"byte_end":7472,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7473,"byte_end":7487,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7488,"byte_end":7491,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7492,"byte_end":7499,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7500,"byte_end":7520,"line_start":180,"line_end":180,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7521,"byte_end":7524,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_to_odd(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7525,"byte_end":7574,"line_start":182,"line_end":182,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(rounded, 3.141);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7575,"byte_end":7606,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7607,"byte_end":7614,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7615,"byte_end":7618,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7619,"byte_end":7626,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7627,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7648,"byte_end":7651,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_to_odd(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7652,"byte_end":7700,"line_start":189,"line_end":189,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(rounded, 3500.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7701,"byte_end":7732,"line_start":190,"line_end":190,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7733,"byte_end":7740,"line_start":191,"line_end":191,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8506,"byte_end":8523,"line_start":224,"line_end":224,"column_start":8,"column_end":25},"name":"half_towards_zero","qualname":"::round::half_towards_zero","value":"pub fn half_towards_zero(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half towards zero.","sig":null,"attributes":[{"value":"/ Round half towards zero.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7829,"byte_end":7857,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7858,"byte_end":7861,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7862,"byte_end":7910,"line_start":198,"line_end":198,"column_start":1,"column_end":49}},{"value":"/ rounding half towards zero.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7911,"byte_end":7942,"line_start":199,"line_end":199,"column_start":1,"column_end":32}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":7943,"byte_end":8014,"line_start":200,"line_end":200,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8015,"byte_end":8089,"line_start":201,"line_end":201,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8090,"byte_end":8127,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8128,"byte_end":8131,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8132,"byte_end":8147,"line_start":204,"line_end":204,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8148,"byte_end":8151,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8152,"byte_end":8182,"line_start":206,"line_end":206,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8183,"byte_end":8214,"line_start":207,"line_end":207,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8215,"byte_end":8218,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8219,"byte_end":8233,"line_start":209,"line_end":209,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8234,"byte_end":8237,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8238,"byte_end":8245,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8246,"byte_end":8266,"line_start":212,"line_end":212,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8267,"byte_end":8270,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_towards_zero(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8271,"byte_end":8326,"line_start":214,"line_end":214,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(rounded, 3.141);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8327,"byte_end":8358,"line_start":215,"line_end":215,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8359,"byte_end":8366,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8367,"byte_end":8370,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8371,"byte_end":8378,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8379,"byte_end":8399,"line_start":219,"line_end":219,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8400,"byte_end":8403,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_towards_zero(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8404,"byte_end":8458,"line_start":221,"line_end":221,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(rounded, 3400.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8459,"byte_end":8490,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8491,"byte_end":8498,"line_start":223,"line_end":223,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9230,"byte_end":9237,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"half_up","qualname":"::round::half_up","value":"pub fn half_up(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half up.","sig":null,"attributes":[{"value":"/ Round half up.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8593,"byte_end":8611,"line_start":228,"line_end":228,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8612,"byte_end":8615,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8616,"byte_end":8664,"line_start":230,"line_end":230,"column_start":1,"column_end":49}},{"value":"/ rounding half up.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8665,"byte_end":8686,"line_start":231,"line_end":231,"column_start":1,"column_end":22}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8687,"byte_end":8758,"line_start":232,"line_end":232,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8759,"byte_end":8833,"line_start":233,"line_end":233,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8834,"byte_end":8871,"line_start":234,"line_end":234,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8872,"byte_end":8875,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8876,"byte_end":8891,"line_start":236,"line_end":236,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8892,"byte_end":8895,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8896,"byte_end":8926,"line_start":238,"line_end":238,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8927,"byte_end":8958,"line_start":239,"line_end":239,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8959,"byte_end":8962,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8963,"byte_end":8977,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8978,"byte_end":8981,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8982,"byte_end":8989,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":8990,"byte_end":9010,"line_start":244,"line_end":244,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9011,"byte_end":9014,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_up(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9015,"byte_end":9060,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(rounded, 3.142);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9061,"byte_end":9092,"line_start":247,"line_end":247,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9093,"byte_end":9100,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9101,"byte_end":9104,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9105,"byte_end":9112,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9113,"byte_end":9133,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9134,"byte_end":9137,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::half_up(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9138,"byte_end":9182,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(rounded, 3500.);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9183,"byte_end":9214,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9215,"byte_end":9222,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":10038,"byte_end":10048,"line_start":288,"line_end":288,"column_start":8,"column_end":18},"name":"stochastic","qualname":"::round::stochastic","value":"pub fn stochastic(f64, i8) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Round half randomly up or down.","sig":null,"attributes":[{"value":"/ Round half randomly up or down.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9305,"byte_end":9340,"line_start":260,"line_end":260,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9341,"byte_end":9344,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Round `value` to accuracy defined by `scale`","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9345,"byte_end":9393,"line_start":262,"line_end":262,"column_start":1,"column_end":49}},{"value":"/ rounding half randomly up or down.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9394,"byte_end":9432,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ Positive `scale` defines the number of decimal digits in the result","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9433,"byte_end":9504,"line_start":264,"line_end":264,"column_start":1,"column_end":72}},{"value":"/ while negative `scale` rounds to a whole number and defines the number","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9505,"byte_end":9579,"line_start":265,"line_end":265,"column_start":1,"column_end":75}},{"value":"/ of trailing zeroes in the result.","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9580,"byte_end":9617,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9618,"byte_end":9621,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9622,"byte_end":9637,"line_start":268,"line_end":268,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9638,"byte_end":9641,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ * `value` - value to round","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9642,"byte_end":9672,"line_start":270,"line_end":270,"column_start":1,"column_end":31}},{"value":"/ * `scale` - result accuracy","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9673,"byte_end":9704,"line_start":271,"line_end":271,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9705,"byte_end":9708,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9709,"byte_end":9723,"line_start":273,"line_end":273,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9724,"byte_end":9727,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9728,"byte_end":9735,"line_start":275,"line_end":275,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9736,"byte_end":9756,"line_start":276,"line_end":276,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9757,"byte_end":9760,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::stochastic(3.14159, 3);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9761,"byte_end":9809,"line_start":278,"line_end":278,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(rounded == 3.141 || rounded == 3.142, true);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9810,"byte_end":9869,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9870,"byte_end":9877,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9878,"byte_end":9881,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9882,"byte_end":9889,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ use math::round;","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9890,"byte_end":9910,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9911,"byte_end":9914,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ let rounded = round::stochastic(3456., -2);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9915,"byte_end":9962,"line_start":285,"line_end":285,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(rounded == 3400. || rounded == 3500., true);","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":9963,"byte_end":10022,"line_start":286,"line_end":286,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/round.rs","byte_start":10023,"byte_end":10030,"line_start":287,"line_end":287,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":60,"byte_end":64,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/jason/.cargo/registry/src/github.com-1ecc6299db9ec823/libmath-0.2.1/src/lib.rs","byte_start":74,"byte_end":79,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[]}